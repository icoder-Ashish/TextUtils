{"version":3,"sources":["components/Navbar.js","components/Textfrom.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","Home","About","onClick","toggleMode","role","htmlFor","Textfrom","useState","text","setText","style","color","heading","value","backgroundColor","rows","onChange","event","target","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","App","setmode","setAlert","showAlert","massage","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7d5d4f81.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid \">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent text-light\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.Home}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.About }</a>\r\n        </li>\r\n     </ul>\r\n      \r\n    </div>\r\n  <div className={`form-check form-switch text-${(props.mode ==='light' ? 'dark':'light')}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"switch\" />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Night Mode</label>\r\n  </div>\r\n</div>\r\n</nav>\r\n\r\n</>\r\n    )\r\n}\r\n","// Here we use hooks(Without making a class it provide the functionality to use class property)\r\n       import React,{useState} from 'react'\r\n       \r\n       export default function Textfrom(props) \r\n       {\r\n\r\n        const onChangehandler = (event)=>{\r\n            setText(event.target.value)\r\n        } \r\n        const UpperCaseHandler = ()=>{\r\n            let newText = text.toUpperCase();\r\n            setText(newText)\r\n            \r\n        } \r\n        const LowerCaseHandler = ()=>{\r\n            let newText = text.toLowerCase();\r\n            setText(newText)\r\n        } \r\n        const copyAllTextHandler = ()=>{\r\n            let newText = document.getElementById(\"myBox\");\r\n            newText.select();\r\n            navigator.clipboard.writeText(newText.value);\r\n        } \r\n        const clearTextHandler = ()=>{\r\n           \r\n            setText(\"\")\r\n           \r\n        } \r\n        const removeExtraSpace = ()=>{\r\n            let newText = text.split(/[ ]+/); //rejax it is a part of js\r\n            setText(newText.join(\" \"))\r\n           \r\n        } \r\n       \r\n\r\n            // how's useState wark const [state, setstate] = useState(initialState)\r\n            //state means value=\"text\" of input tag and setText is a function used to update text\r\n           const [text, setText] = useState('')\r\n           return (\r\n               \r\n    \r\n               <>\r\n                <div className = \"container\" style={{color: props.mode ==='light' ? 'dark':'light' }}>\r\n                   <div className=\"mb-3 my-5\">\r\n                         <h1>{props.heading} </h1>\r\n                        <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode ==='light' ? 'light' : '#2f3f50',color: props.mode ==='light' ? 'black' : 'white' }} id=\"myBox\" rows=\"9\" onChange={onChangehandler} ></textarea>\r\n                    </div>\r\n                            <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={UpperCaseHandler} >ChangeUpperCase</button>\r\n                            <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={LowerCaseHandler} >ChangeLowerCase</button>\r\n                            <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={copyAllTextHandler} >CopyAllText</button>\r\n                            <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={clearTextHandler} >ClearText</button>\r\n                            <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={removeExtraSpace}>Remove Extra Space</button>\r\n                    <div className =\"container my-3\">\r\n                            <h1>Your Text Summary</h1>\r\n                            <p>Numbers of Words:{text.split(\" \").length} And Numbers of Character: {text.length}</p>\r\n                            <p>You will read your text within {0.008 * text.split(\" \").length } Minuts.</p>\r\n                            <h2>Preview You Text </h2>\r\n                            <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                    \r\n               </>\r\n           )\r\n       }\r\n       ","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n      \r\n        // error(1) solve props.alert == null hai tab ye karo\r\n          props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n        </div>\r\n      \r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextFrom from './components/Textfrom';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#3f3a47';\n\n      showAlert(\"Night Mode Enable\",'success');\n      \n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n     \n      showAlert(\"Light Mode Enable\",'success');\n    }\n  }\n  //null hai islliye error(1) dega \n  const [alert, setAlert] = useState(null)\n//Change color using setAlert of Alert And send massage\n\n   const showAlert = (massage,type) =>{\n    //earliar alert is NULL Now Alert is Object\n    setAlert({\n      msg : massage,\n      type :type\n    })\n    setTimeout(()=>{\n        setAlert(null);\n    },1500)\n   }\n  return (\n      <>\n        <Navbar title=\"TextEditor\" Home =\"Home\" About= \"About\" mode={mode} toggleMode={toggleMode} />\n        <div >\n              {/* <Alert type={} msg={} />   -->>> this wrong because object nahi pass hoga  useState ka const pass hoga as a function*/}\n              <Alert alert={alert} />\n        </div>\n        <div className=\"container\" >\n          <TextFrom heading=\"Welcome to our website\"  />\n        </div>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}